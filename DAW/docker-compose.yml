version: '3.3'
services:
#Contenedor mysql para crear la base de datos
  mysql:
    image: mysql:latest
    environment:
      MYSQL_DATABASE: 'Aimar'
      MYSQL_USER: 'Aimar'
      MYSQL_PASSWORD: '12345678'
      MYSQL_ROOT_PASSWORD: 'password'
    ports:
      - '3306:3306'
    expose:
      - '3306'
    volumes:
      - './datos-reto/mysql/:/var/lib/mysql'
    command: ["--log_bin_trust_function_creators=1"]
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      retries: 5
      start_period: 10s
      timeout: 5s
# Contenedor de laravel para coger datos de la api y guardarlos en la base
  CapDatos:
          image:  docker.io/bitnami/laravel:10
          ports:
          - "8083:8000"
          environment:
          - DB_HOST=mysql
          - DB_PORT=3306
          - DB_USERNAME=Aimar
          - DB_PASSWORD=12345678
          - DB_DATABASE=Aimar
          volumes:
            - ./CapDeDatos/:/app
          command: ["php", "artisan", "schedule:work"]
          depends_on:
             mysql:
                condition: service_healthy
  # Plan B, apache con modulo de php y extensiones de php para ejecutar archivos .php. No funcional, problemas con CORS
  # capdatos:
  #         build: 
  #           context: ./
  #           dockerfile: Dockerfile
  #         ports:
  #         - "8083:80" 
  #         environment:
  #          - DB_HOST=185.60.40.210
  #          - DB_PORT=3306
  #          - DB_USERNAME=Aimar
  #          - DB_PASSWORD=12345678
  #          - DB_DATABASE=Aimar
  #         volumes:
  #         - ./CapturaDeDatosPHP/:/var/www/html
  # Contenedor de laravel que contiene la API para iniciar sesion, registrarse, cerrar sesion y recibir datos de la base
  APIWeb:
          image:  docker.io/bitnami/laravel:10
          ports:
          - "8086:8000"
          environment:
          - DB_HOST=mysql
          - DB_PORT=3306
          - DB_USERNAME=Aimar
          - DB_PASSWORD=12345678
          - DB_DATABASE=Aimar
          volumes:
            - ./APIWeb/:/app
          depends_on:
            mysql:
                condition: service_healthy
          command: ["sh", "-c", "php artisan migrate && php artisan passport:install --force && php artisan serve --host=0.0.0.0"]
  #Contenedor con LAMP para guardar nuestra pagina web
  LAMP:
          image: httpd:latest
          ports:
          - "8082:80"
          volumes:
          - ./APP:/usr/local/apache2/htdocs/
  #Contenedor para proxy inversa
  Inverso:
          image: nginx:latest
          ports:
          - "81:80"
          volumes:
          - ./inverso/nginx.conf:/etc/nginx/nginx.conf
          depends_on:
          - LAMP
  
  #Contenedor phpmyadmin para tener interfaz grafica de la base de datos y comprobar que los datos funcionen
  phpmyadmin:
        image: 'phpmyadmin:latest'
        ports:
            - 8084:80
        environment:
            - PMA_ARBITRARY=1
